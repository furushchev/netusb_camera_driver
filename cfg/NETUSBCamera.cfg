#!/usr/bin/env python

PKG="netusb_camera_driver"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

video_modes = gen.enum([gen.const("320x240",   int_t, 0, "QVGA"),
                        gen.const("640x480",   int_t, 1, "VGA"),
                        gen.const("752x480",   int_t, 2, "WVGA"),
                        gen.const("800x600",   int_t, 3, "SVGA"),
                        gen.const("1024x768",  int_t, 4, "XGA"),
                        gen.const("1280x1024", int_t, 5, "SXGA"),
                        gen.const("1600x1200", int_t, 6, "UXGA"),
                        gen.const("2048x1536", int_t, 7, "QXGA"),
                        gen.const("2592x1944", int_t, 8, "QSXGA"),
                        gen.const("3840x2748", int_t, 9, "WQUXGA"),],
                       "Resolution of camera image")

#gen.add("auto_configure", bool_t, DeviceLevels.RUNNING, "Auto configure parameters", False)
#gen.add("default_configure", bool_t, DeviceLevels.RUNNING, "Reset parameters to default", False)

# variable type level description default min max

gen.add("video_mode", int_t, 0, "Video mode", 1, edit_method=video_modes)
gen.add("exposure", double_t, 0, "Exposure", 10.0, 0.05, 1913.0)
gen.add("brightness", int_t, 0, "Brightness", 100, 0, 255)
gen.add("contrast", int_t, 0, "Contrast", 100, 0, 512)
gen.add("gamma", int_t, 0, "Gamma", 100, 0, 141)
gen.add("white_balance", int_t, 0, "White Balance", 1, 0, 100)
gen.add("gain", int_t, 0, "Gain", 6, -10, 60)
gen.add("red_gain", int_t, 0, "Red Gain", 100, 0, 512)
gen.add("green_gain", int_t, 0, "Green Gain", 100, 0, 512)
gen.add("blue_gain", int_t, 0, "Blue Gain", 100, 0, 512)
gen.add("shutter", int_t, 0, "Shutter", 2, 0, 2)

exit(gen.generate(PKG, "netusb_camera_driver", "NETUSBCamera"))

